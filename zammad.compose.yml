version: "3.8"

services:
  zammad-backup:
    command: ["zammad-backup"]
    depends_on:
      - zammad-railsserver
    entrypoint: /usr/local/bin/backup.sh
    environment:
      - BACKUP_SLEEP=86400
      - HOLD_DAYS=10
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    image: zammad/zammad-docker-compose:zammad-postgresql-3.6.0-44
    restart: always
    volumes:
      - zammad-backup:/var/tmp/zammad
      - zammad-data:/opt/zammad
    networks:
      - zammad

  zammad-elasticsearch:
    environment:
      - discovery.type=single-node
    image: zammad/zammad-docker-compose:zammad-elasticsearch-3.6.0-44
    restart: always
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - zammad

  zammad-init:
    command: ["zammad-init"]
    depends_on:
      - zammad-postgresql
    environment:
      - POSTGRESQL_USER=${POSTGRES_USER}
      - POSTGRESQL_PASS=${POSTGRES_PASS}
    image: zammad/zammad-docker-compose:zammad-3.6.0-44
    restart: on-failure
    volumes:
      - zammad-data:/opt/zammad
    networks:
      - zammad

  zammad-memcached:
    command: memcached -m 256M
    image: memcached:1.6.9-alpine
    restart: always
    networks:
      - zammad

  zammad-nginx:
    command: ["zammad-nginx"]
    depends_on:
      - zammad-railsserver
    image: zammad/zammad-docker-compose:zammad-3.6.0-44
    restart: always
    volumes:
      - zammad-data:/opt/zammad
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.zammad.rule=Host(`support.ubiety.ca`)
        - traefik.http.routers.zammad.entrypoints=https
        - traefik.http.routers.zammad.tls=true
        - traefik.http.routers.zammad.tls.certresolver=le
        - traefik.http.services.zammad.loadbalancer.server.port=80
    networks:
      - traefik-public
      - zammad

  zammad-postgresql:
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    image: postgres:13.1-alpine
    restart: always
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - zammad

  zammad-railsserver:
    command: ["zammad-railsserver"]
    depends_on:
      - zammad-memcached
      - zammad-postgresql
    image: zammad/zammad-docker-compose:zammad-3.6.0-44
    restart: always
    volumes:
      - zammad-data:/opt/zammad
    networks:
      - zammad

  zammad-scheduler:
    command: ["zammad-scheduler"]
    depends_on:
      - zammad-memcached
      - zammad-railsserver
    image: zammad/zammad-docker-compose:zammad-3.6.0-44
    restart: always
    volumes:
      - zammad-data:/opt/zammad
    networks:
      - zammad

  zammad-websocket:
    command: ["zammad-websocket"]
    depends_on:
      - zammad-memcached
      - zammad-railsserver
    image: zammad/zammad-docker-compose:zammad-3.6.0-44
    restart: always
    volumes:
      - zammad-data:/opt/zammad
    networks:
      - zammad

volumes:
  zammad-data:
    driver: glusterfs
    name: "zammad/data"
  zammad-backup:
    driver: glusterfs
    name: "zammad/backup"
  postgresql-data:
    driver: glusterfs
    name: "zammad/postgresql"
  elasticsearch-data:
    driver: glusterfs
    name: "zammad/elasticsearch"

networks:
  zammad:
    attachable: true
